% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rankSamples.R
\name{rankSamples}
\alias{rankSamples}
\title{Function to pick samples for limited dilution/other bench science following changepoint
regression of an ASV table or network.}
\usage{
rankSamples(
  asvTab,
  thresh,
  network = NULL,
  id,
  groups = NULL,
  phenotypes = NULL,
  p.cutoff = 0.05
)
}
\arguments{
\item{asvTab}{An asv table as returned by \code{\link{qc}} or \code{\link{cal}}.}

\item{thresh}{Output from \code{\link{thresh}} or \code{\link{netThresh}}.}

\item{network}{Optionally a network object as returned from \code{\link{asvNet}} and clustered
with \code{\link{netClust}}. Defaults to NULL in which case the asv table is used and thresh
is assumed to be changepoint regressions at the asv level.}

\item{id}{The name of the column containing sample names.}

\item{groups}{Optionally specify which ASVs/Clusters should be used. If NULL, the default,
then significant models (p value below p.cutoff) are used to find groups.}

\item{phenotypes}{Optionally specify which phenotypes should be used. If NULL, the default,
then all in thresh are used.}

\item{p.cutoff}{P value cutoff for statistical significance if groups is NULL. Defaults to 0.05.}
}
\value{
A data frame of samples ranked by the impact of their nodes (ASVs) or clusters
}
\description{
Function to pick samples for limited dilution/other bench science following changepoint
regression of an ASV table or network.
}
\examples{

# a<-qc(); b<-cal(a); c<-thresh(b); d<-asvDist(a) ;
# e<-net(d, thresh = c) ;  f<-netClust(e) ; g <- rankSamples(f)

print(load(paste0("/home/jsumner/Desktop/stargate/SINC/",
"sincUtils/syncomBuilder/net_output_clustered.rdata")))
print(load("/home/jsumner/Desktop/stargate/SINC/sincUtils/syncomBuilder/cal_output.rdata"))
print(load("/home/jsumner/Desktop/stargate/SINC/sincUtils/syncomBuilder/threshOutput.rdata"))

asv <- are_c[[1]]
zinbCalibrated <- are_c[[2]][are_c[[2]]$model == "ZINB", "asv"]
asv <- are_c[[1]][, c("tissue", "plot", "row", "genotype", "biomass", "sd", zinbCalibrated)]

netThresh_output <- netThresh(net_data,
  asvTab = asv, asvCols = NULL,
  clusterCol = "kmeans_cluster", cluster = NULL, phenoCols = "biomass",
  model = "hinge", calibratePheno = "genotype"
)

asv$sample <- paste0(asv$plot, asv$tissue)

network_ranking <- rankSamples(
  asvTab = asv, thresh = netThresh_output, network = net_data,
  id = "sample", groups = NULL, phenotypes = NULL, p.cutoff = 0.85
)
head(network_ranking)
asvTable_ranking <- rankSamples(
  asvTab = asv, thresh = threshMods, network = NULL,
  id = "sample", groups = NULL, phenotypes = NULL, p.cutoff = 0.05
)
head(asvTable_ranking)

}
