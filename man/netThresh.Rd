% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/netThresh.R
\name{netThresh}
\alias{netThresh}
\title{Function to aggregate clustered networks overall phenotypic impacts.}
\usage{
netThresh(
  net,
  asvTab,
  asvCols = NULL,
  clusterCol = NULL,
  phenoCols = NULL,
  model = "hinge",
  cores = getOption("mc.cores", 1),
  calibratePheno = NULL
)
}
\arguments{
\item{net}{Object returned from \code{\link{asvNet}} with clusters added using \code{\link{netClust}}}

\item{asvTab}{An asv table with phenotypes joined.}

\item{asvCols}{A character vector of columns representing microbes (nodes). Defaults NULL where all column names containing the string "ASV" will be used.}

\item{clusterCol}{The column name to use for clusters. If NULL then the first column name containing the string "cluster" is used.}

\item{phenoCols}{A vector of phenotype columns to use in changepoint regression. These should be column names in the ASV table}

\item{model}{Type of changepoint model in chngpt::chngptm labeling convention. Currently hinge, upperhinge, and segmented are supported. See Figure 2.1 of the \link{[chngpt vignette](https://cran.r-project.org/web/packages/chngpt/vignettes/chngpt-vignette.pdf)}}

\item{cores}{Number of cores to run in parallel, defaults to 1 if "mc.cores" option is not set.}

\item{calibratePheno}{An optional vector of column names to calibrate the phenotypes by. This should generally correspond to those used in `cal` if the ASV table has been calibrated or just represent confounders that you wish to remove effects from in the changepoint regression. /code{lm} is used to get residuals of the phenotype after these effects are regressed out.}

\item{cluster}{A vector of clusters to be regressed against. By default this is NULL and all clusters will be used.}
}
\value{
A named list (same as net) with three elements:
"Nodes" is a dataframe of nodes and their metadata, now with an added cluster.
"Edges" is a dataframe of edges connecting nodes.
"graph" is the igraph object used to generate the dataframes.
}
\description{
This should take a network, a phenotype/list of phenotypes to consider the network against,
the asv table that the network was generated from,
}
\details{
This might actually be a method to call with thresh, not its own standalone thing.
in that case it would need to take a network as an additional argument (clustered), with an optional colname of clusters,
then it'd group ASVs by community, summarize them similar to taxonomic clustering for dirichlet,
and regress changepoints for each sample's community in cluster vs phenotypes.

This would mean that I can turn the current thresh() function into a new file called asvThresh
then just call asvThresh or netThresh in a new thresh() function.
The question becomes how much effort does that save? Maybe none?
It would be kind of clean looking but I don't think it actually helps user side.
And writing side it only helps in one very specific way but I can probably use the different situation well here.

So if it's a new function then:
get network (clustered) [arg: net]
get cluster to regress (default to NULL for all clusters, analogous to asvCols) [arg: cluster ]
take phenoCols (probably can't default very well)[arg: phenoCols]
take model type (default to "hinge") [arg: model]
get number of cores (default to options)[arg: cores]
whether/how to calibrate a phenotype [arg: calibratePheno]
phenoCols, asvCols=NULL, model="hinge", cores=getOption("mc.cores",1), calibratePheno = NULL
}
\examples{

# a<-qc(); b<-cal(a); c<-thresh(b); d<-asvDist(a) ; e<-net(d, thresh = c)
print(load("/home/jsumner/Desktop/stargate/SINC/sincUtils/syncomBuilder/net_output_clustered.rdata"))
print(load("/home/jsumner/Desktop/stargate/SINC/sincUtils/syncomBuilder/cal_output.rdata"))
asv<-are_c[[1]]
zinbCalibrated = are_c[[2]][are_c[[2]]$model=="ZINB", "asv"]
asv<-are_c[[1]][, c("tissue","plot","row","genotype", "biomass","sd", zinbCalibrated)]

netThresh_output<-netThresh(net_data, asvTab=asv, asvCols=NULL, 
   clusterCol="kmeans_cluster", cluster=NULL, phenoCols="biomass",
   model="hinge", calibratePheno="genotype")

}
\keyword{changepoint}
\keyword{network,}
