% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pullNode.R
\name{pullNode}
\alias{pullNode}
\title{Function to highlight subsets of networks generated from \code{asvNet} or \link{netcomi2scb}.}
\usage{
pullNode(
  net,
  node,
  edge = NULL,
  edgeFilter = NULL,
  plot = FALSE,
  nodeCol = "asv",
  keepNames = FALSE,
  order = 1
)
}
\arguments{
\item{net}{Network list returned from \link{asvNet} or \link{netcomi2scb}.}

\item{node}{A node name (or vector of names) to extract connections to.}

\item{edge}{Optional weighting for edges. Must be present in the "edges" of net. Default of NULL
will show equal size edges between all connected nodes.}

\item{edgeFilter}{Optional value to filter edges for. If non-NULL then only edges with edgeWeight
greater than this value are kept.
This can be a character vector or a numeric.
Character vectors are interpreted as quantiles ("0.5" corresponds to the top 50 percent are kept).}

\item{plot}{deprecated, use \code{\link{plot.scbnet}}.}

\item{nodeCol}{Column of node information to find the node in. Defaults to "asv".}

\item{keepNames}{Logical, should other nodes be filled in the plot as their node name (TRUE) or all
as "other" (FALSE)? Defaults to FALSE.}

\item{order}{The order of connection to include, defaults to 1. If Node A has an Edge to Node B,
and Node B has an edge to Node C, but Node A does not have an edge to Node C then A to C is a 2nd
order connection, and Node C would only be included if order >= 2.}
}
\value{
An \code{scbnet} object of the subset network
}
\description{
Function to highlight subsets of networks generated from \code{asvNet} or \link{netcomi2scb}.
}
\examples{

taxa <- c(
  "Bacteria", "Proteobacteria", "Betaproteobacteria", "Burkholderiales",
  "Burkholderiaceae", "Paraburkholderia", NA
)
taxa <- matrix(rep(taxa, 10), nrow = 10, byrow = TRUE)
colnames(taxa) <- c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species")
rownames(taxa) <- paste0("ASV", 1:10)
# taxonomy data if used should have ASV names explicitly as a column
taxa_df <- as.data.frame(taxa)
taxa_df$asv <- rownames(taxa_df)
sp_dist <- asvDist(asv, method = "spearman", clr_transform = TRUE, edgeFilter = 0.5)
net_data <- asvNet(sp_dist, taxa_df, edge = "spearman_similarity")

sub_net <- pullNode(net_data, node = "ASV10",
edge = "spearman_similarity", edgeFilter = 0.7, nodeCol = "asv")

}
