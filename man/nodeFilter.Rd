% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nodeFilter.R
\name{nodeFilter}
\alias{nodeFilter}
\title{Function to filter nodes from networks generated by \code{asvNet}.}
\usage{
nodeFilter(net, trait = NULL, filter = NULL, type = NULL, replot = TRUE)
}
\arguments{
\item{net}{Object returned from \link{asvNet}.}

\item{trait}{A node trait to filter data using. This should be a column name in net$nodes.}

\item{filter}{Value to filter nodes by. How this is used depends on the type argument. For
numeric traits this can be a number or a character (0.9 or "0.9") with the character option
corresponding to quantiles (in this example the 90th percentile). For character traits this
should be a character vector and nodes with values of trait in that vector will be kept.}

\item{type}{type of comparison to make out of "ge", "le", and "in". Defaults to NULL in which case
"in" is used for character traits and "ge" is used for numeric traits. Note "ge" and "le" are
greater than or equal to and less than or equal to, respectively.}

\item{replot}{Logical, should nodes be rearranged to represent the network better visually?
Defaults to TRUE.}
}
\value{
A modified version of net with filtered nodes (and edges to those nodes).
}
\description{
Function to filter nodes from networks generated by \code{asvNet}.
}
\examples{

taxa <- c(
  "Bacteria", "Proteobacteria", "Betaproteobacteria", "Burkholderiales",
  "Burkholderiaceae", "Paraburkholderia", NA
)
taxa <- matrix(rep(taxa, 10), nrow = 10, byrow = TRUE)
colnames(taxa) <- c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species")
rownames(taxa) <- paste0("ASV", 1:10)
# taxonomy data if used should have ASV names explicitly as a column
taxa_df <- as.data.frame(taxa)
taxa_df$asv <- rownames(taxa_df)

sp_dist <- asvDist(asv, method = "spearman", clr_transform = TRUE, edgeFilter = 0.5)
net_data <- asvNet(sp_dist, taxa_df, edge = "spearman_similarity")

dim(net_data$nodes)
net_data2 <- nodeFilter(net_data, trait = "strength", filter = 7, type = NULL, replot = TRUE)
dim(net_data2$nodes)

}
